<?php 
/**
 * @desc Wrapper for long-term variables that can be automatically updated by running the ::update() method
 * @author Phil Gale
 *
 */
	class Keyring {
		
		/**
		 * @desc Fetches all the keyring values from the include file
		 */
		public function __construct(){
			require_once('utilities/keys.inc.php');
			$this->clientRevision = $keyCache['clientRevision'];
			$this->revToken = $keyCache['revToken'];
			$this->clientLibrary = $keyCache['clientLibrary'];
			$this->controllerKey = $keyCache['controllerKey']; # Found in JSQueue.swf (com -> grooveshark -> jsQueue -> Controller -> ~ Line 71
			unset($keyCache);
		}
		
		/**
		 * @desc Provides a method to access any keyring variable
		 * @param multitype $key
		 */
		public static function get($key){
			global $keyRing;
			return $keyRing->$key;
		}
		
		/**
		 * @desc Forces an update of the Keyring variable include file, and attempts to update the keys by using groovesharks .js library
		 */
		public static function update(){

			$javascriptConfig = file_get_contents('http://static.a.gs-cdn.net/gs/app.js');
			$dateGen = date('d F Y H:i:s', time() ) ; 
			preg_match("/client:\"(?<client>\w+)\".*?clientRevision:\"(?<clientRevision>\d+)\".*?revToken:\"(?<revToken>\w+)\"/s", $javascriptConfig, $matches);
			$configData = 
"<?php
/**
 * Automatically generated by the Keyring.class.php ->update() method, using offical grooveshark libraries
 * controllerKey must be manually updated, as it requires decompilation of a .swf. See the /documentation/SecureKeys.txt file for more information
 * Autogenerated at {$dateGen} 
 */ 
	\$keyCache = array(
		'clientRevision' => " . $matches['clientRevision'] . ",
		'revToken' => '" . $matches['revToken'] . "',
		'clientLibrary' => '" . $matches['client'] . "',
		'controllerKey' => '" . Keyring::get('controllerKey') . "',
	);";
			file_put_contents('utilities/keys.inc.php', $configData );
		}
	}
	
	$keyRing = new Keyring();